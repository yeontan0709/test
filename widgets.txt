import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

// Stateless widget
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo Showcase',
      home: HomePage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

// Stateful widget
class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int counter = 0;

  void _incrementCounter() {
    setState(() {
      counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter UI Elements'),
        centerTitle: true,
        backgroundColor: Colors.deepPurple,
        elevation: 4,
        actions: [
          IconButton(
            icon: Icon(Icons.search),
            onPressed: () {
              ScaffoldMessenger.of(
                context,
              ).showSnackBar(SnackBar(content: Text('Search tapped!')));
            },
          ),
          IconButton(
            icon: Icon(Icons.more_vert),
            onPressed: () {
              ScaffoldMessenger.of(
                context,
              ).showSnackBar(SnackBar(content: Text('More options tapped!')));
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            SectionTitle(title: 'Stateless Widget'),
            MyStatelessWidget(),

            Divider(),

            SectionTitle(title: 'Stateful Widget'),
            MyStatefulSection(counter: counter, onPressed: _incrementCounter),

            Divider(),

            SectionTitle(title: 'Row and Icons'),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                Icon(Icons.home, size: 40, color: Colors.blue),
                Icon(Icons.favorite, size: 40, color: Colors.red),
                Icon(Icons.settings, size: 40, color: Colors.green),
              ],
            ),

            Divider(),

            SectionTitle(title: 'Container'),
            Container(
              height: 100,
              width: double.infinity,
              margin: EdgeInsets.symmetric(vertical: 10),
              padding: EdgeInsets.all(20),
              decoration: BoxDecoration(
                color: Colors.amber,
                borderRadius: BorderRadius.circular(12),
              ),
              child: Text(
                'This is a styled container',
                style: TextStyle(fontSize: 18),
              ),
            ),

            Divider(),

            SectionTitle(title: 'Text Button'),
            TextButton(
              onPressed: () {
                ScaffoldMessenger.of(
                  context,
                ).showSnackBar(SnackBar(content: Text('Text Button Pressed')));
              },
              child: Text('Click Me'),
            ),
          ],
        ),
      ),
    );
  }
}

// Custom section title widget
class SectionTitle extends StatelessWidget {
  final String title;

  const SectionTitle({required this.title});

  @override
  Widget build(BuildContext context) {
    return Text(
      title,
      style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
    );
  }
}

// Stateless widget section
class MyStatelessWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Text('Hello from Stateless Widget!', style: TextStyle(fontSize: 18));
  }
}

// Custom Stateful widget section
class MyStatefulSection extends StatelessWidget {
  final int counter;
  final VoidCallback onPressed;

  const MyStatefulSection({required this.counter, required this.onPressed});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Text('Button tapped $counter times.'),
        ElevatedButton(onPressed: onPressed, child: Text('Tap Me')),
      ],
    );
  }
}
